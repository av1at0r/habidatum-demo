{"version":3,"sources":["features/Map/hooks/useLayer.ts","features/Map/hooks/usePointsSource.ts","features/BikeRides/hooks/useBikePoints.ts","features/Map/hooks/useSymbolLayer.ts","features/BikeRides/components/BikeRidesMap.tsx","constants.ts","features/Map/hooks/useMap.ts","features/BikeRides/components/BikeRidesTableHeader.tsx","features/BikeRides/components/BikeRidesTableRow.tsx","utils/camelize.ts","features/BikeRides/data/bikesTransformFunctions.ts","utils/createCsvTransformerFunction.ts","features/BikeRides/hooks/useBikeRidesData.ts","features/BikeRides/views/BikeRidesView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useLayer","map","loaded","source","id","type","paint","useEffect","current","getLayer","removeLayer","addLayer","usePointsSource","options","useState","points","setPoints","getSource","sourceId","setData","getPointsSource","data","addSource","features","point","geometry","coordinates","lon","lat","properties","defaultPointPaint","highlightedLayerLayout","useBikePoints","layerId","highlightedPoints","highlightedPaint","setHighlightedPaint","highlightedLayerPaint","setHighlightedLayerPaint","layout","useSymbolLayer","setHighlightedPointScale","useCallback","scale","mapboxgl","accessToken","process","defaultRides","BikeRidesMap","rides","selectedRideIndex","props","useRef","mapContainer","setLoaded","createdMap","Map","container","on","remove","Object","values","useMap","style","center","useMemo","length","longs","item","startStationLongitude","endStationLongitude","lats","startStationLatitude","endStationLatitude","minLong","Math","min","maxLong","max","minLat","minRideDuration","tripduration","maxRideDuration","getRideSсale","rideDuration","setZoom","setCenter","ride","highlightedCoordinates","forEach","index","push","title","startStationName","endStationName","ref","BikeRidesTableHeader","TableHead","TableRow","TableCell","BikeRidesTableRow","onMouseEnter","onMouseLeave","HumanizeDuration","units","handleMouseEnter","starttime","toLocaleString","stoptime","camelize","str","replace","word","toLowerCase","toUpperCase","transfomerFunctions","transform","value","Date","key","transofrmFunction","fetchBikeRidesData","Promise","resolve","reject","parse","download","dynamicTyping","complete","error","header","transformHeader","useStyles","makeStyles","theme","createStyles","root","display","tableWrapper","width","maxHeight","overflowY","flexShrink","mapWrapper","position","flexGrow","left","top","height","BikeRidesView","useQuery","staleTime","Infinity","classes","setSelectedRideIndex","clearSelection","undefined","className","Table","TableBody","toISOString","bikeid","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.08fd32e6.chunk.js","sourcesContent":["import { Layer } from \"mapbox-gl\";\r\nimport { useEffect } from \"react\";\r\nimport { MapState } from \"./useMap\";\r\n\r\ntype Options = {\r\n  source: string;\r\n  id: string;\r\n  type: Layer[\"type\"];\r\n  paint?: Layer[\"paint\"];\r\n};\r\n\r\nexport default function useLayer(\r\n  { map, loaded }: MapState,\r\n  { source, id, type, paint }: Options\r\n) {\r\n  useEffect(() => {\r\n    if (!map.current || !loaded) {\r\n      return;\r\n    }\r\n    const layer = map.current.getLayer(id);\r\n    if (layer) {\r\n      map.current.removeLayer(id);\r\n    }\r\n    map.current.addLayer({\r\n      id,\r\n      source,\r\n      type,\r\n      paint,\r\n    });\r\n  }, [id, loaded, map, paint, source, type]);\r\n}\r\n","import { GeoJSONSource, GeoJSONSourceRaw } from \"mapbox-gl\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { MapState } from \"./useMap\";\r\n\r\ntype Options = {\r\n  sourceId: string;\r\n  layerId: string;\r\n};\r\n\r\nexport type PointSource = {\r\n  coordinates: { lon: number; lat: number };\r\n  properties: GeoJSON.Feature[\"properties\"];\r\n};\r\n\r\nexport default function usePointsSource(\r\n  { map, loaded }: MapState,\r\n  options: Options\r\n) {\r\n  const [points, setPoints] = useState<Array<PointSource>>([]);\r\n\r\n  useEffect(() => {\r\n    if (!map.current || !loaded) {\r\n      return;\r\n    }\r\n\r\n    function getPointsSource(): GeoJSONSourceRaw {\r\n      return {\r\n        type: \"geojson\",\r\n        data: {\r\n          type: \"FeatureCollection\",\r\n          features: points.map((point) => ({\r\n            type: \"Feature\",\r\n            geometry: {\r\n              type: \"Point\",\r\n              coordinates: [point.coordinates.lon, point.coordinates.lat],\r\n            },\r\n            properties: point.properties,\r\n          })),\r\n        },\r\n      };\r\n    }\r\n\r\n    const source = map.current.getSource(options.sourceId) as GeoJSONSource;\r\n    if (source) {\r\n      source.setData(getPointsSource().data!);\r\n    } else {\r\n      map.current.addSource(options.sourceId, getPointsSource());\r\n    }\r\n  }, [loaded, map, options.sourceId, points]);\r\n\r\n  return { points, setPoints };\r\n}\r\n","import { Layer } from \"mapbox-gl\";\r\nimport { useCallback, useState } from \"react\";\r\nimport useLayer from \"../../Map/hooks/useLayer\";\r\nimport { MapState } from \"../../Map/hooks/useMap\";\r\nimport usePointsSource from \"../../Map/hooks/usePointsSource\";\r\nimport useSymbolLayer from \"../../Map/hooks/useSymbolLayer\";\r\n\r\nconst defaultPointPaint = {\r\n  \"circle-radius\": 5,\r\n  \"circle-color\": \"#007cbf\",\r\n};\r\n\r\nconst highlightedLayerLayout: Layer[\"layout\"] = {\r\n  \"text-field\": [\"get\", \"title\"],\r\n  \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\r\n  \"text-offset\": [0, 2],\r\n  \"text-anchor\": \"bottom\",\r\n  \"text-ignore-placement\": true,\r\n};\r\n\r\nconst defaultHighlightPointRadius = 7;\r\n\r\nexport default function useBikePoints(map: MapState) {\r\n  const points = usePointsSource(map, { sourceId: \"points\", layerId: \"point\" });\r\n  const highlightedPoints = usePointsSource(map, {\r\n    sourceId: \"highlighted-points\",\r\n    layerId: \"highlighted-point\",\r\n  });\r\n\r\n  useLayer(map, {\r\n    id: \"point\",\r\n    source: \"points\",\r\n    paint: defaultPointPaint,\r\n    type: \"circle\",\r\n  });\r\n\r\n  const [highlightedPaint, setHighlightedPaint] = useState<Layer[\"paint\"]>({\r\n    \"circle-radius\": defaultPointPaint[\"circle-radius\"],\r\n    \"circle-color\": \"#FF0000\",\r\n  });\r\n\r\n  const [highlightedLayerPaint, setHighlightedLayerPaint] = useState<\r\n    Layer[\"paint\"]\r\n  >({\r\n    \"text-halo-color\": \"rgba(255, 255, 255, 0.8)\",\r\n    \"text-halo-width\": 10,\r\n  });\r\n\r\n  useLayer(map, {\r\n    id: \"highlighted-point\",\r\n    source: \"highlighted-points\",\r\n    paint: highlightedPaint,\r\n    type: \"circle\",\r\n  });\r\n\r\n  useSymbolLayer(map, {\r\n    id: \"highlighted-label\",\r\n    source: \"highlighted-points\",\r\n    layout: highlightedLayerLayout,\r\n    paint: highlightedLayerPaint,\r\n  });\r\n\r\n  const setHighlightedPointScale = useCallback((scale: number) => {\r\n    setHighlightedPaint({\r\n      \"circle-radius\": defaultHighlightPointRadius * scale,\r\n      \"circle-color\": \"#FF0000\",\r\n    });\r\n    //Обновляем стиль, paint чтобы перерисовать\r\n    //layer с лейблами и они оказались над точками\r\n    setHighlightedLayerPaint({\r\n      \"text-halo-color\": \"rgba(255, 255, 255, 0.8)\",\r\n      \"text-halo-width\": 10,\r\n    });\r\n  }, []);\r\n\r\n  return { points, highlightedPoints, setHighlightedPointScale };\r\n}\r\n","import { Layer } from \"mapbox-gl\";\r\nimport { useEffect } from \"react\";\r\nimport { MapState } from \"./useMap\";\r\n\r\ntype Options = {\r\n  source: string;\r\n  id: string;\r\n  layout?: Layer[\"layout\"];\r\n  paint?: Layer[\"paint\"];\r\n};\r\n\r\nexport default function useSymbolLayer(\r\n  { map, loaded }: MapState,\r\n  { source, id, layout, paint }: Options\r\n) {\r\n  useEffect(() => {\r\n    if (!map.current || !loaded) {\r\n      return;\r\n    }\r\n    const layer = map.current.getLayer(id);\r\n    if (layer) {\r\n      map.current.removeLayer(id);\r\n    }\r\n    map.current.addLayer({\r\n      id,\r\n      source,\r\n      type: \"symbol\",\r\n      layout,\r\n      paint,\r\n    });\r\n  }, [id, layout, loaded, map, paint, source]);\r\n}\r\n","import mapboxgl, { LngLatLike } from \"mapbox-gl\";\r\nimport React, { useCallback, useEffect, useMemo } from \"react\";\r\nimport { mapboxToken } from \"../../../constants\";\r\nimport useMap from \"../../Map/hooks/useMap\";\r\nimport { PointSource } from \"../../Map/hooks/usePointsSource\";\r\nimport useBikePoints from \"../hooks/useBikePoints\";\r\nimport { BikeRideTransformed } from \"../interfaces/bike-rides.interfaces\";\r\n\r\nmapboxgl.accessToken = mapboxToken;\r\n\r\ninterface Props extends React.HTMLAttributes<HTMLElement> {\r\n  rides?: BikeRideTransformed[];\r\n  selectedRideIndex?: number;\r\n}\r\n\r\nconst defaultRides: BikeRideTransformed[] = [];\r\n\r\nexport const BikeRidesMap = ({\r\n  rides = defaultRides,\r\n  selectedRideIndex,\r\n  ...props\r\n}: Props) => {\r\n  const { map, mapContainer, loaded } = useMap<HTMLDivElement>({\r\n    style: \"mapbox://styles/mapbox/streets-v11\",\r\n  });\r\n\r\n  const center: LngLatLike | undefined = useMemo(() => {\r\n    if (rides.length === 0) {\r\n      return;\r\n    }\r\n    const longs = [\r\n      ...rides.map((item) => item.startStationLongitude),\r\n      ...rides.map((item) => item.endStationLongitude),\r\n    ];\r\n    const lats = [\r\n      ...rides.map((item) => item.startStationLatitude),\r\n      ...rides.map((item) => item.endStationLatitude),\r\n    ];\r\n    const minLong = Math.min(...longs);\r\n    const maxLong = Math.max(...longs);\r\n\r\n    const minLat = Math.min(...lats);\r\n    const maxLat = Math.max(...lats);\r\n\r\n    const center: LngLatLike = {\r\n      lon: minLong + (maxLong - minLong) / 2,\r\n      lat: minLat + (maxLat - minLat) / 2,\r\n    };\r\n    return center;\r\n  }, [rides]);\r\n\r\n  const { minRideDuration, maxRideDuration } = useMemo(() => {\r\n    const minRideDuration = Math.min(...rides.map((item) => item.tripduration));\r\n    const maxRideDuration = Math.max(...rides.map((item) => item.tripduration));\r\n\r\n    return { minRideDuration, maxRideDuration };\r\n  }, [rides]);\r\n\r\n  const getRideSсale = useCallback(\r\n    (rideDuration: number) => {\r\n      return (\r\n        ((rideDuration - minRideDuration) /\r\n          (maxRideDuration - minRideDuration)) *\r\n          (2 - 1) +\r\n        1\r\n      );\r\n    },\r\n    [maxRideDuration, minRideDuration]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (map.current && center) {\r\n      map.current.setZoom(13);\r\n      map.current.setCenter(center);\r\n    }\r\n  }, [center, map, rides, rides.length]);\r\n\r\n  const {\r\n    setHighlightedPointScale,\r\n    points,\r\n    highlightedPoints,\r\n  } = useBikePoints({ map, loaded });\r\n\r\n  useEffect(() => {\r\n    if (typeof selectedRideIndex === \"undefined\") {\r\n      return;\r\n    }\r\n    const ride = rides[selectedRideIndex];\r\n    setHighlightedPointScale(getRideSсale(ride.tripduration));\r\n  }, [getRideSсale, rides, selectedRideIndex, setHighlightedPointScale]);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      return;\r\n    }\r\n    const coordinates: Array<PointSource> = [];\r\n    const highlightedCoordinates: Array<PointSource> = [];\r\n    rides.forEach((ride, index) => {\r\n      if (index === selectedRideIndex) {\r\n        highlightedCoordinates.push({\r\n          coordinates: {\r\n            lat: ride.startStationLatitude,\r\n            lon: ride.startStationLongitude,\r\n          },\r\n          properties: {\r\n            title: ride.startStationName,\r\n          },\r\n        });\r\n        highlightedCoordinates.push({\r\n          coordinates: {\r\n            lat: ride.endStationLatitude,\r\n            lon: ride.endStationLongitude,\r\n          },\r\n          properties: {\r\n            title: ride.endStationName,\r\n          },\r\n        });\r\n      } else {\r\n        coordinates.push({\r\n          coordinates: {\r\n            lat: ride.startStationLatitude,\r\n            lon: ride.startStationLongitude,\r\n          },\r\n          properties: {\r\n            title: \"\",\r\n          },\r\n        });\r\n        coordinates.push({\r\n          coordinates: {\r\n            lat: ride.endStationLatitude,\r\n            lon: ride.endStationLongitude,\r\n          },\r\n          properties: {\r\n            title: \"\",\r\n          },\r\n        });\r\n      }\r\n    });\r\n    points.setPoints(coordinates);\r\n    highlightedPoints.setPoints(highlightedCoordinates);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    highlightedPoints.setPoints,\r\n    loaded,\r\n    points.setPoints,\r\n    rides,\r\n    selectedRideIndex,\r\n  ]);\r\n\r\n  return <div {...props} ref={mapContainer} />;\r\n};\r\n","export const mapboxToken = process.env.REACT_APP_MAPBOX_TOKEN!;\r\n","import mapboxgl, { Map, MapboxOptions } from \"mapbox-gl\";\r\nimport { RefObject, useEffect, useRef, useState } from \"react\";\r\n\r\nexport type MapState = {\r\n  map: RefObject<Map | undefined>;\r\n  loaded: boolean;\r\n};\r\n\r\nexport default function useMap<T extends HTMLElement>(\r\n  options: Omit<MapboxOptions, \"container\">\r\n) {\r\n  const map = useRef<Map>();\r\n  const mapContainer = useRef<T>(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!mapContainer.current) {\r\n      return;\r\n    }\r\n    const createdMap = (map.current = new mapboxgl.Map({\r\n      ...options,\r\n      container: mapContainer.current,\r\n    }));\r\n\r\n    map.current.on(\"load\", () => {\r\n      setLoaded(true);\r\n    });\r\n\r\n    return () => {\r\n      createdMap.remove();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, Object.values(options));\r\n\r\n  return { map, mapContainer, loaded };\r\n}\r\n","import { TableCell, TableHead, TableRow } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport const BikeRidesTableHeader = () => {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell>Время начала поездки</TableCell>\r\n        <TableCell>Точка отправления</TableCell>\r\n        <TableCell>Время окончания поездки</TableCell>\r\n        <TableCell>Точка прибытия</TableCell>\r\n        <TableCell>Продолжительность поездки</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n};\r\n","import { TableCell, TableRow } from \"@material-ui/core\";\r\nimport HumanizeDuration from \"humanize-duration\";\r\nimport React, { useCallback, useMemo } from \"react\";\r\nimport { BikeRideTransformed } from \"../interfaces/bike-rides.interfaces\";\r\n\r\ntype Props = {\r\n  ride: BikeRideTransformed;\r\n  index: number;\r\n  onMouseEnter: (index: number) => void;\r\n  onMouseLeave: () => void;\r\n};\r\n\r\nexport const BikeRidesTableRow = ({\r\n  ride,\r\n  index,\r\n  onMouseEnter,\r\n  onMouseLeave,\r\n}: Props) => {\r\n  const tripduration = useMemo(\r\n    () =>\r\n      HumanizeDuration(ride.tripduration * 60 * 1000, {\r\n        units: [\"d\", \"h\", \"m\"],\r\n      }),\r\n    [ride.tripduration]\r\n  );\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    onMouseEnter(index);\r\n  }, [index, onMouseEnter]);\r\n\r\n  return (\r\n    <TableRow onMouseEnter={handleMouseEnter} onMouseLeave={onMouseLeave}>\r\n      <TableCell>{ride.starttime.toLocaleString()}</TableCell>\r\n      <TableCell>{ride.startStationName}</TableCell>\r\n      <TableCell>{ride.stoptime.toLocaleString()}</TableCell>\r\n      <TableCell>{ride.endStationName}</TableCell>\r\n      <TableCell>{tripduration}</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n","export default function camelize(str: string) {\r\n  return str\r\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\r\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\r\n    })\r\n    .replace(/\\s+/g, \"\");\r\n}\r\n","import { TransformerFunctions } from \"../../../interfaces/transformer.interfaces\";\r\nimport { BikeRide } from \"../interfaces/bike-rides.interfaces\";\r\n\r\nexport const bikesTransformFunctions: TransformerFunctions<keyof BikeRide> = {\r\n  starttime: (value: string) => new Date(value),\r\n  stoptime: (value: string) => new Date(value),\r\n};\r\n","import {\r\n  TransformerFunctionKey,\r\n  TransformerFunctions\r\n} from \"../interfaces/transformer.interfaces\";\r\n\r\nexport default function createCsvTransformerFunction<\r\n  T extends TransformerFunctionKey\r\n>(transfomerFunctions: TransformerFunctions<T>) {\r\n  return (value: any, key: T) => {\r\n    const transofrmFunction = transfomerFunctions[key];\r\n    if (transofrmFunction) {\r\n      return transofrmFunction(value);\r\n    }\r\n    return value;\r\n  };\r\n}\r\n","import { parse, ParseResult } from \"papaparse\";\r\nimport { useQuery } from \"react-query\";\r\nimport camelize from \"../../../utils/camelize\";\r\nimport createCsvTransformerFunction from \"../../../utils/createCsvTransformerFunction\";\r\nimport { bikesTransformFunctions } from \"../data/bikesTransformFunctions\";\r\nimport { BikeRideTransformed } from \"../interfaces/bike-rides.interfaces\";\r\n\r\nexport const BIKE_RIDES_KEY = \"bike-rides\";\r\n\r\nconst transform = createCsvTransformerFunction(bikesTransformFunctions);\r\n\r\nfunction fetchBikeRidesData() {\r\n  return new Promise<ParseResult<BikeRideTransformed>>((resolve, reject) => {\r\n    parse<BikeRideTransformed>(\"/bike-rides.csv\", {\r\n      download: true,\r\n      dynamicTyping: true,\r\n      complete: resolve,\r\n      error: reject,\r\n      header: true,\r\n      transformHeader: camelize,\r\n      transform,\r\n    });\r\n  });\r\n}\r\n\r\nexport default function useBikeRidesData() {\r\n  return useQuery([BIKE_RIDES_KEY], fetchBikeRidesData, {\r\n    staleTime: Infinity,\r\n  });\r\n}\r\n","import { createStyles, makeStyles, Table, TableBody } from \"@material-ui/core\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { BikeRidesMap } from \"../components/BikeRidesMap\";\r\nimport { BikeRidesTableHeader } from \"../components/BikeRidesTableHeader\";\r\nimport { BikeRidesTableRow } from \"../components/BikeRidesTableRow\";\r\nimport useBikeRidesData from \"../hooks/useBikeRidesData\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    tableWrapper: {\r\n      width: \"50%\",\r\n      maxHeight: \"100vh\",\r\n      overflowY: \"auto\",\r\n      flexShrink: 0,\r\n    },\r\n    mapWrapper: {\r\n      position: \"relative\",\r\n      flexShrink: 0,\r\n      flexGrow: 1,\r\n    },\r\n    map: {\r\n      position: \"absolute\",\r\n      left: 0,\r\n      top: 0,\r\n      width: \"100%\",\r\n      height: \"100vh\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function BikeRidesView() {\r\n  const { data } = useBikeRidesData();\r\n\r\n  const classes = useStyles();\r\n  const [selectedRideIndex, setSelectedRideIndex] = useState<number>();\r\n\r\n  const clearSelection = useCallback(() => {\r\n    setSelectedRideIndex(undefined);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table>\r\n          <BikeRidesTableHeader />\r\n          <TableBody>\r\n            {data?.data.map((item, index) => (\r\n              <BikeRidesTableRow\r\n                index={index}\r\n                key={`${item.starttime.toISOString()} ${item.bikeid}`}\r\n                ride={item}\r\n                onMouseEnter={setSelectedRideIndex}\r\n                onMouseLeave={clearSelection}\r\n              />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <div className={classes.mapWrapper}>\r\n        <BikeRidesMap\r\n          rides={data?.data}\r\n          className={classes.map}\r\n          selectedRideIndex={selectedRideIndex}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { CssBaseline } from \"@material-ui/core\";\nimport React from \"react\";\nimport BikeRidesView from \"./features/BikeRides/views/BikeRidesView\";\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <BikeRidesView />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}